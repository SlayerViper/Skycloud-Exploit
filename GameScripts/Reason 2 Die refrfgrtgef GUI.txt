local plr = game:GetService("Players").LocalPlayer

local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))

local function Create(classname)
return function(t)
local ins = Instance.new(classname)
for i,v in pairs(t) do
ins[i] = v
end
return ins
end
end

local function Tween(obj, t, props)
local TweenService = game:GetService("TweenService")
local ti = TweenInfo.new(t,Enum.EasingStyle.Linear,Enum.EasingDirection.In,0,false,0)
local tween = TweenService:Create(obj,ti,props)
tween:Play()
return tween
end

--gui converters are for noobz-
local main = Create "Frame" {
Parent = gui,
ClipsDescendants = true,
Size = UDim2.new(0,400,0,300),
BackgroundColor3 = Color3.fromRGB(120, 120, 120),
BorderSizePixel = 1,
Position = UDim2.new(0.5,-200,0.5,-150),
Draggable = true,
Active = true,
}

local topbar = Create "TextLabel" {
BackgroundColor3 = Color3.fromRGB(106, 106, 106),
BorderSizePixel = 0,
Position = UDim2.new(0,0,0,0),
Size = UDim2.new(1,0,0,50),
TextColor3 = Color3.new(1,1,1),
TextSize = 40,
Text = "Reason 2 Die Gui",
Font = Enum.Font.SourceSansSemibold,
TextStrokeTransparency = 0.5,
TextStrokeColor3 = Color3.new(0,0,0),
Parent = main
}

local function CreateButton(text, parent)
return Create "TextButton" {
BackgroundColor3 = Color3.fromRGB(106, 106, 106),
BorderColor3 = Color3.new(0,0,0),
BorderSizePixel = 1,
Size = UDim2.new(0,80,0,40),
Font = Enum.Font.SourceSansSemibold,
Text = text,
TextColor3 = Color3.new(1,1,1),
TextSize = 18,
TextStrokeTransparency = 0.5,
TextStrokeColor3 = Color3.new(0,0,0),
Parent = parent
}
end

local SpeedHack = CreateButton("Speed Hack\n(z)", main)
SpeedHack.Position = UDim2.new(0,10,0,70)
local SpeedHackClick = function()
local active = SpeedHack.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and true or false
SpeedHack.BackgroundColor3 = active and Color3.fromRGB(106, 106, 106) or Color3.fromRGB(85, 255, 127)
plr.Character.Humanoid.WalkSpeed = active and 16 or 100
end
SpeedHack.MouseButton1Click:connect(SpeedHackClick)

local HighJump = CreateButton("High Jump\n(x)", main)
HighJump.Position = UDim2.new(0,110,0,70)
local HighJumpClick = function()
local active = HighJump.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and true or false
HighJump.BackgroundColor3 = active and Color3.fromRGB(106, 106, 106) or Color3.fromRGB(85, 255, 127)
plr.Character.Humanoid.JumpPower = active and 50 or 100
end
HighJump.MouseButton1Click:connect(HighJumpClick)

local InfEnergyActive = false
local InfEnergy = CreateButton("Infinite Energy\n(c)", main)
InfEnergy.Position = UDim2.new(0,210,0,70)
InfEnergy.Size = UDim2.new(0,100,0,40)
local InfEnergyClick = function()
local active = InfEnergy.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and true or false
InfEnergy.BackgroundColor3 = active and Color3.fromRGB(106, 106, 106) or Color3.fromRGB(85, 255, 127)
InfEnergyActive = not active
end
InfEnergy.MouseButton1Click:connect(InfEnergyClick)

local NoClipEnabled = false
local NoClip = CreateButton("NoClip\n(v)", main)
NoClip.Position = UDim2.new(0,330,0,70)
NoClip.Size = UDim2.new(0,60,0,40)
local NoClipClick = function()
local active = NoClip.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and true or false
NoClip.BackgroundColor3 = active and Color3.fromRGB(106, 106, 106) or Color3.fromRGB(85, 255, 127)
NoClipEnabled = not active
end

plr.CharacterAdded:connect(function(char)
char:WaitForChild"Humanoid".Changed:connect(function(prop)
if prop == "WalkSpeed" and SpeedHack.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and char.Humanoid.WalkSpeed ~= 200 then
char.Humanoid.WalkSpeed = 100
elseif prop == "JumpPower" and HighJump.BackgroundColor3 == Color3.fromRGB(85, 255, 127) and char.Humanoid.JumpPower ~= 200 then
char.Humanoid.JumpPower = 100
end
end)
if SpeedHack.BackgroundColor3 == Color3.fromRGB(85, 255, 127) then
char:WaitForChild"Humanoid".WalkSpeed = 100
end
if HighJump.BackgroundColor3 == Color3.fromRGB(85, 255, 127) then
char:WaitForChild"Humanoid".JumpPower = 100
end
end)

local TransparencyTweens = {}
main.MouseLeave:connect(function()
spawn(function()
local bool = false
local ev = main.MouseEnter:connect(function()
bool = true
end)
wait(1)
ev:Disconnect()
if bool then return end
for i,v in pairs(TransparencyTweens) do
v:Pause()
end
TransparencyTweens = {}
for i,v in pairs(main:GetDescendants()) do
if v.Visible then
local totween = {}
if v.ClassName:sub(1,4) == "Text" then
totween.TextTransparency = 0.7
end
if v.BackgroundTransparency ~= 1 then
totween.BackgroundTransparency = 0.7
end
TransparencyTweens[#TransparencyTweens + 1] = Tween(v, 0.5, totween)
end
end
main:TweenSize(UDim2.new(0,400,0,50),nil,nil,nil,true)
end)
end)
main.MouseEnter:connect(function()
for i,v in pairs(TransparencyTweens) do
v:Pause()
end
TransparencyTweens = {}
for i,v in pairs(main:GetDescendants()) do
if v.Visible then
local totween = {}
if v.ClassName:sub(1,4) == "Text" then
totween.TextTransparency = 0
end
if v.BackgroundTransparency ~= 1 then
totween.BackgroundTransparency = 0
end
TransparencyTweens[#TransparencyTweens + 1] = Tween(v, 0.5, totween)
end
end
main:TweenSize(UDim2.new(0,400,0,300),nil,nil,nil,true)
end)

--tracers--
local Tracers = {}

local function AddLasso(p,team)
if not Tracers[team.Name] then return end
if p == plr then return end
spawn(function()
if p.Character then
local l = Instance.new("SelectionPartLasso")
l.Parent = p.Character
l.Humanoid = p.Character:FindFirstChildOfClass"Humanoid"
l.Part = plr.Character:WaitForChild"HumanoidRootPart"
l.Visible = true
l.Color3 = team.TeamColor.Color
for i=0,5 do
local sg = Instance.new("SurfaceGui")
sg.Face = i
sg.Parent = p.Character
sg.Adornee = p.Character:FindFirstChild"HumanoidRootPart"
sg.AlwaysOnTop = true
local f = Instance.new("Frame", sg)
f.Size = UDim2.new(1,0,1,0)
f.BorderSizePixel = 0
f.BackgroundColor3 = team.TeamColor.Color
f.BackgroundTransparency = 0.5
end
end
end)
end

local function RemoveLasso(p)
if not p.Character then return end
for i,v in pairs(p.Character:GetDescendants()) do
if v.ClassName:find("Selection") or v.ClassName == "SurfaceGui" then
v:Destroy()
end
end
end

for _,team in pairs(game:GetService("Teams"):GetChildren()) do
team.PlayerAdded:connect(function(p)
AddLasso(p,team)
end)

team.PlayerRemoved:connect(function(p)
RemoveLasso(p)
end)
end

function ToggleTracers(team, bool)
Tracers[team] = bool
local t = game:GetService("Teams"):FindFirstChild(team)
if not t then return end
for i,v in pairs(t:GetPlayers()) do
if bool then
AddLasso(v,t)
else
RemoveLasso(v)
end
end
end

local function CharAdded(plr, char)
if Tracers[tostring(plr.Team)] then
AddLasso(plr,plr.Team)
end
end

local function PlrAdded(plr)
plr.CharacterAdded:connect(function(char)
CharAdded(plr, char)
end)
if plr.Character then
CharAdded(plr, plr.Character)
end
end

game:GetService("Players").PlayerAdded:connect(PlrAdded)
for _,v in pairs(game:GetService("Players"):GetPlayers()) do
PlrAdded(v)
end

local TracersBtn = CreateButton("Tracers: None\n(b)", main)
TracersBtn.Size = UDim2.new(0,140,0,40)
TracersBtn.Position = UDim2.new(0,10,0,130)
local TracersBtnClick = function()
local curr = TracersBtn.Text:sub(10)
if curr ~= "None" then
ToggleTracers(curr, false)
end
local teams = {"None", "Survivior", "Zombie"}
local new = ""
for i,v in pairs(teams) do
if v == curr then
new = teams[i + 1] or teams[1]
end
end
if new ~= "None" then
ToggleTracers(new, true)
end
TracersBtn.Text = "Tracers: " .. new .. "\n(b)"
end
TracersBtn.MouseButton1Click:connect(TracersBtnClick)

local ClickTp = CreateButton("ClickTp\n(e)", main)
ClickTp.Position = UDim2.new(0,170,0,130)
ClickTp.Size = UDim2.new(0,80,0,40)
local ClickTpClick = function()
local m = plr:GetMouse()
if m.Target then
ClickTp.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
plr.Character:MoveTo(m.Hit.p)
wait(0.5)
ClickTp.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
else
ClickTp.BackgroundColor3 = Color3.new(1,0,0)
wait(0.5)
ClickTp.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
end
end
ClickTp.MouseButton1Click:connect(ClickTpClick)

--[[local FlyEnabled = true
local Fly = CreateButton("Fly\n(t)", main)
Fly.Position = UDim2.new(0,270,0,130)
local FlyClick = function()
doesn't work
end
Fly.MouseButton1Click:connect(function()
Fly.BackgroundColor3 = Color3.new(1,0,0)
wait(0.5)
Fly.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
end)]]

local Exit = Create "TextButton" {
Parent = main,
BackgroundColor3 = Color3.new(1,0,0),
Position = UDim2.new(1,-40,0,10),
Size = UDim2.new(0,30,0,30),
Font = Enum.Font.SourceSansBold,
Text = "X",
TextColor3 = Color3.new(1,1,1),
TextSize = 30
}
Exit.MouseButton1Click:connect(function()
gui:Destroy()
script.Disabled = true
end)

local mt = getrawmetatable(game)
make_writeable(mt)

local old = mt.__index
mt.__index = function(self, i)
if i == "WalkSpeed" and not checkcaller() then
return 16
elseif i == "JumpPower" and not checkcaller() then
return 50
end
return old(self, i)
end

local oldnc = mt.__namecall
mt.__namecall = function(self, ...)
local args = {...}
local method = args[#args]
if self.Name == "Energy" and self.ClassName == "BindableFunction" and method == "Invoke" and InfEnergyActive then
return true
end
return oldnc(self, ...)
end

local state = Enum.HumanoidStateType
local statemt = getrawmetatable(state)
make_writeable(statemt)
local oldsi = statemt.__index
statemt.__index = function(self, i)
if self == state and i == "StrafingNoPhysics" and not checkcaller() then
return 1337
end
return oldsi(self, i)
end

local Hotkeys = {
z = SpeedHackClick,
x = HighJumpClick,
c = InfEnergyClick,
v = NoClipClick,
b = TracersBtnClick,
e = ClickTpClick,
--t = FlyClick,
}

local m = plr:GetMouse()
m.KeyDown:connect(function(k)
if Hotkeys[k] then
Hotkeys[k]()
end
end)

spawn(function()
while wait() do
if NoClipEnabled then
plr.Character:WaitForChild"Humanoid":SetStateEnabled(11, true)
plr.Character:WaitForChild"Humanoid":ChangeState(11)
end
end
end)